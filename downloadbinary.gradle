plugins {
    id "de.undercouch.download" version "3.2.0"
}

Properties properties = new Properties()
properties.load(project.file('gradle.properties').newDataInputStream())
def ggconnectorURL = properties.getProperty('gemfire.greenplum.connector.url')
def ggconnectorSHA = properties.getProperty('gemfire.greenplum.connector.sha256')
def gemfireURL      = properties.getProperty('gemfire.url')
def gemfireSHA      = properties.getProperty('gemfire.sha256')
def token           = properties.getProperty('pivotal.network.token')
def tokenheader     = "Token token=${token}"

import de.undercouch.gradle.tasks.download.Download
import de.undercouch.gradle.tasks.download.Verify

task printProps {
    doLast {
      println "Property[gemfire.url]: ${gemfireURL}"
    	println "Property[gemfire.greenplum.connector.url]: ${ggconnectorURL}"
	    println "Property[token]: ${token}"
	    println "Property[ggconnectorSHA]: ${ggconnectorSHA}"
      println "Property[gemfireSHA]: ${gemfireSHA}"

   }
}
// Run this command `$gradle -b downloadbinary.gradle downloadGemfireFile` to download GemFire file.
// It assumes pivotal.network.token is defined in the file "gradle.properties"
task downloadGemfireFile(type: Download) {
    src gemfireURL
    dest new File(buildDir, 'pivotal-gemfire.zip')
    header 'Accept', 'application/json'
    header 'Authorization', tokenheader

}

task verifyGemfireFile(type: Verify, dependsOn: ':downloadGemfireFile') {
    description 'Verify Gemfire zip via MD5 hash'
    src new File(buildDir, 'pivotal-gemfire.zip')
    algorithm 'SHA-256'
    checksum gemfireSHA
}

task unzipGemfireFile(type: Copy, dependsOn: ':verifyGemfireFile') {
    def zipFile = file('build/pivotal-gemfire.zip')
    def outputDir = file("${projectDir}/libs")
    from zipTree(zipFile)
    into outputDir
}

// Run this command `$gradle -b downloadbinary.gradle downloadGGCFile` to download GemFire-Greenplum connector file.
// It assumes pivotal.network.token is defined in the file "gradle.properties"
task downloadGGCFile(type: Download) {
    src ggconnectorURL
    dest new File(buildDir,'gemfire-greenplum-3.0.0.jar')
    header 'Accept', 'application/json'
    header 'Authorization', tokenheader
//    overwrite true
}

task verifyGGCFile(type: Verify, dependsOn: ':downloadGGCFile') {
    description 'Verify Gemfire-Greenplum connector jar via SHA256 hash'
    src new File(buildDir, 'gemfire-greenplum-3.0.0.jar')
    algorithm 'SHA-256'
    checksum  ggconnectorSHA
}

task copyGGCFile(type: Copy) {
    description 'Copy Gemfire-Greenplum jar to libs directory'
    from 'build'
    into 'libs'
    include '*.jar'
    exclude '*.zip'
}
